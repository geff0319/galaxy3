// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * App struct
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function AbsolutePath(path: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2732478132, path) as any;
    return $resultPromise;
}

export function AddScheduledTask(spec: string, event: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2885521097, spec, event) as any;
    return $resultPromise;
}

export function All(): Promise<$models.FlagResultWithData> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1854759489) as any;
    return $resultPromise;
}

export function ChangeLog(level: number, path: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(311308804, level, path) as any;
    return $resultPromise;
}

export function CheckBiliLogin(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(863651137) as any;
    return $resultPromise;
}

export function ConnectMqtt(mqttInfo: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1881731002, mqttInfo) as any;
    return $resultPromise;
}

export function ConnectWs(domain: string, id: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3393914666, domain, id) as any;
    return $resultPromise;
}

export function Delete(id: number): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2606451045, id) as any;
    return $resultPromise;
}

export function DisConnectWs(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1628493414) as any;
    return $resultPromise;
}

export function DisconnectMqtt(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(413170006) as any;
    return $resultPromise;
}

export function Download(url: string, path: string, headers: { [_: string]: string } | null, event: string, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3402520810, url, path, headers, event, proxy) as any;
    return $resultPromise;
}

export function DownloadYoutube(url: string, params: string[] | null): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(192132895, url, params) as any;
    return $resultPromise;
}

export function DownloadYoutubeByKey(p: string, retry: boolean): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1303766481, p, retry) as any;
    return $resultPromise;
}

export function Exec(path: string, args: string[] | null, options: $models.ExecOptions): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(618024583, path, args, options) as any;
    return $resultPromise;
}

export function ExecBackground(path: string, args: string[] | null, outEvent: string, endEvent: string, options: $models.ExecOptions): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(105513867, path, args, outEvent, endEvent, options) as any;
    return $resultPromise;
}

export function ExitApp(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3584168433) as any;
    return $resultPromise;
}

export function ExitKey(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1518851097) as any;
    return $resultPromise;
}

export function FileExists(path: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3574270444, path) as any;
    return $resultPromise;
}

/**
 * 返回option窗口展示位置，展示在鼠标正下方
 */
export function GetBelowWinPos(winWidth: number, winHeight: number): Promise<$models.FlagResultWithData> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2825699787, winWidth, winHeight) as any;
    return $resultPromise;
}

export function GetEnv(): Promise<$models.EnvResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2566882409) as any;
    return $resultPromise;
}

export function GetInterfaces(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3695391530) as any;
    return $resultPromise;
}

/**
 * 获取视频清晰度和名称
 */
export function GetVideoMeta(url: string): Promise<$models.FlagResultWithData> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2970401784, url) as any;
    return $resultPromise;
}

export function HideToolWindow(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2838462616) as any;
    return $resultPromise;
}

export function HttpDelete(url: string, header: { [_: string]: string } | null, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1506214029, url, header, proxy) as any;
    return $resultPromise;
}

export function HttpGet(url: string, header: { [_: string]: string } | null, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1343613790, url, header, proxy) as any;
    return $resultPromise;
}

export function HttpHead(url: string, headers: { [_: string]: string } | null): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4010271580, url, headers) as any;
    return $resultPromise;
}

export function HttpPost(url: string, header: { [_: string]: string } | null, body: string, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2490729012, url, header, body, proxy) as any;
    return $resultPromise;
}

export function HttpPut(url: string, header: { [_: string]: string } | null, body: string, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(948154023, url, header, body, proxy) as any;
    return $resultPromise;
}

export function KillProcess(pid: number): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(955826243, pid) as any;
    return $resultPromise;
}

export function Makedir(path: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4210470055, path) as any;
    return $resultPromise;
}

export function Movefile(source: string, target: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1673361321, source, target) as any;
    return $resultPromise;
}

export function Notify(title: string, message: string, icon: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3903279783, title, message, icon) as any;
    return $resultPromise;
}

export function OpenDirectoryDialog(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3503375653) as any;
    return $resultPromise;
}

export function Ping(domain: string, id: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2205754418, domain, id) as any;
    return $resultPromise;
}

export function ProcessInfo(pid: number): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2814093571, pid) as any;
    return $resultPromise;
}

export function Readfile(path: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2399806564, path) as any;
    return $resultPromise;
}

export function RemoveScheduledTask(id: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3262104244, id) as any;
    return $resultPromise;
}

export function Removefile(path: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(235824760, path) as any;
    return $resultPromise;
}

export function RestartApp(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2278615332) as any;
    return $resultPromise;
}

export function ShowToolWindow(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4168158649) as any;
    return $resultPromise;
}

export function StatusMqtt(): Promise<$models.FlagResultWithData> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3978753710) as any;
    return $resultPromise;
}

export function TencentTextTranslate(sourceText: string, sourceLang: string, targetLang: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1082277922, sourceText, sourceLang, targetLang) as any;
    return $resultPromise;
}

export function UnzipGZFile(path: string, output: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(802911995, path, output) as any;
    return $resultPromise;
}

export function UnzipZIPFile(path: string, output: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(392836561, path, output) as any;
    return $resultPromise;
}

export function UpdateTray(tray: $models.TrayContent): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1287064223, tray) as any;
    return $resultPromise;
}

export function UpdateTrayMenus(menus: $models.MenuItem[] | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3701350073, menus) as any;
    return $resultPromise;
}

export function UpdateYtDlpConfig(): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(477803756) as any;
    return $resultPromise;
}

export function Upload(url: string, path: string, headers: { [_: string]: string } | null, event: string, proxy: string): Promise<$models.HTTPResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3542539119, url, path, headers, event, proxy) as any;
    return $resultPromise;
}

export function Writefile(path: string, content: string): Promise<$models.FlagResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4130227843, path, content) as any;
    return $resultPromise;
}
